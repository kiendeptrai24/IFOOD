@using iFood.Data.Enum
@using iFood.Extensions
@using iFood.ViewModels
@model IndexProductViewModel

@{
    bool isAuthenticated = User.Identity?.IsAuthenticated == true;

    int resultStart = ((Model.Page - 1) * Model.PageSize) + 1;
    int resultEnd = Math.Min(resultStart + Model.PageSize - 1, Model.TotalProducts);

    bool isValidPage = resultStart <= Model.TotalProducts;

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<style>
    .product-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 50%;
        border: 2px solid #dee2e6;
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
    }

    .description-text {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }

    .show-more {
        color: #007bff;
        cursor: pointer;
        font-size: 0.9rem;
    }
</style>

<section>
    <div class="container mt-5">
        <div class="bg-primary text-white p-4 rounded-top text-center">
            <h2>Product Management - Admin Panel</h2>
        </div>

        <!-- Search -->
        <div class="d-flex justify-content-between align-items-center mt-3 flex-wrap">
            <div>
                <a class="btn btn-success" asp-controller="Product" asp-action="Create">
                    <i class="bi bi-plus-circle"></i> Add New Product
                </a>
            </div>
            <form method="get" class="d-flex" style="width: 250px;">
                <input class="form-control" type="search" name="searchTerm" placeholder="Search..." value="@ViewBag.SearchTerm">
                <button class="btn btn-outline-secondary" type="submit">
                    <i class="bi bi-search"></i>
                </button>
            </form>
        </div>

        <!-- Categories -->
        <div class="text-center my-3">
            <a class="btn btn-secondary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="-1">All</a>
            @foreach (var category in Html.GetEnumSelectList<ProductCategory>())
            {
                <a class="btn btn-secondary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="@category.Value">@category.Text</a>
            }
        </div>

        <!-- Product Cards -->
        <div class="d-flex justify-content-between align-items-center mt-4 flex-wrap">
            <span class="text-muted">Showing @resultStart - @resultEnd of @Model.TotalProducts</span>
            <nav>
                <ul class="pagination mb-0">
                    <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                        <a class="page-link" asp-route-page="1" asp-route-category="@Model.Category">«</a>
                    </li>
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">‹</a>
                    </li>

                    @{
                        var _start = Math.Max(1, Model.Page - 1);
                        var _end = Math.Min(Model.TotalPages, Model.Page + 1);
                        for (int i = _start; i <= _end; i++)
                        {
                            <li class="page-item @(i == Model.Page ? "active" : "")">
                                <a class="page-link" asp-route-page="@i" asp-route-category="@Model.Category">@i</a>
                            </li>
                        }
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">›</a>
                    </li>
                    <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-route-page="@Model.TotalPages" asp-route-category="@Model.Category">»</a>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body">
                            <div class="d-flex gap-3 align-items-start">
                                <img src="@product.Image" class="product-image" />
                                <div class="flex-grow-1">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="text-muted mb-1"><strong>Category:</strong> @product.Category</p>
                                    <p class="text-muted mb-1"><strong>Quantity:</strong> @product.Quantity</p>
                                    <p class="text-muted mb-1"><strong>Price:</strong> $@product.Price</p>
                                    <p class="text-muted mb-1"><strong>Total:</strong> $@product.Total</p>
                                    <p class="text-muted mb-1"><strong>Release:</strong> @product.DateSell.ToString("yyyy/MM/dd")</p>

                                    <p class="text-muted description-text" id="desc-@product.ProductID">@product.Description</p>
                                    @if (product.Description?.Length > 120)
                                    {
                                        <span class="show-more" onclick="toggleDesc('@product.ProductID')">Xem thêm</span>
                                    }

                                    <div class="d-flex gap-2 mt-3">
                                        <a class="btn btn-sm btn-outline-primary" asp-action="Detail" asp-controller="Product" asp-route-id="@product.ProductID">
                                            <i class="bi bi-card-heading"></i> Detail
                                        </a>
                                        <a class="btn btn-sm btn-outline-warning" asp-action="Edit" asp-controller="Product" asp-route-id="@product.ProductID">
                                            <i class="bi bi-pencil-square"></i> Edit
                                        </a>
                                        <button class="btn btn-sm btn-outline-danger delete-button" data-id="@product.ProductID">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-between align-items-center mt-4 flex-wrap">
            <span class="text-muted">Showing @resultStart - @resultEnd of @Model.TotalProducts</span>
            <nav>
                <ul class="pagination mb-0">
                    <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                        <a class="page-link" asp-route-page="1" asp-route-category="@Model.Category">«</a>
                    </li>
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">‹</a>
                    </li>

                    @{
                        var start = Math.Max(1, Model.Page - 1);
                        var end = Math.Min(Model.TotalPages, Model.Page + 1);
                        for (int i = start; i <= end; i++)
                        {
                            <li class="page-item @(i == Model.Page ? "active" : "")">
                                <a class="page-link" asp-route-page="@i" asp-route-category="@Model.Category">@i</a>
                            </li>
                        }
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">›</a>
                    </li>
                    <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-route-page="@Model.TotalPages" asp-route-category="@Model.Category">»</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</section>
<!-- Toggle Description -->
<script>
    function toggleDesc(id) {
        const desc = document.getElementById("desc-" + id);
        if (desc.classList.contains("description-text")) {
            desc.classList.remove("description-text");
            event.target.innerText = "Show less";
        } else {
            desc.classList.add("description-text");
            event.target.innerText = "Show more";
        }
    }
</script>

<!-- SweetAlert Delete -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".delete-button").forEach(button => {
            button.addEventListener("click", function (event) {
                event.preventDefault();
                let itemId = this.getAttribute("data-id");

                Swal.fire({
                    title: "Are you sure you want to delete?",
                    text: "This action cannot be undone!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Confirm",
                    cancelButtonText: "Cancel"
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = `/Product/DeleteAdmin/${itemId}`;
                    }
                });
            });
        });
    });
</script>
