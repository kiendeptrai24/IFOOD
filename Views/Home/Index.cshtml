
@using iFood.Data.Enum
@using iFood.ViewModels
@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}
@{
    bool isAuthenticated = User.Identity?.IsAuthenticated == true;

    int resultStart = ((Model.Page - 1) * Model.PageSize) + 1;
    int resultEnd = Math.Min(resultStart + Model.PageSize - 1, Model.TotalProducts);

    bool isValidPage = resultStart <= Model.TotalProducts;

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<style>
    #formContainer {
    background-color: rgba(2, 28, 46, 0.395); /* Màu xanh dương */
    padding: 20px;
    border-radius: 10px;
    }
    #boderx
    {
        border-radius: 15px;
    }
    .portfolio-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 cột mỗi hàng */
    gap: 15px; /* Khoảng cách giữa ảnh */
    justify-content: center;
    max-width: 800px;
    margin: auto;
    }

    .portfolio-box img {
        width: 100%; 
        height: 300px; 
        object-fit: cover;
    }
    .no-bullets {
        list-style-type: none; /* Loại bỏ dấu chấm */
        padding-left: 0; /* Xóa khoảng thụt lề mặc định */
    }
    .fixed-card {
            height: 170px; /* Chiều cao cố định */
            display: flex;
            justify-content: center; /* Căn giữa theo chiều ngang */
            align-items: center; /* Căn giữa theo chiều dọc */
            overflow: hidden; /* Đảm bảo không bị tràn nội dung */
    }
    .fixed-card-img {
        object-fit: scale-down; /* Cắt ảnh để vừa khung */
        height: 100%; /* Ảnh full chiều cao */
        width: 100%; /* Ảnh full chiều rộng */
        display: block;
    }

}
</style>


<section class="container">
    <div class="d-flex justify-content-center">
        <div id="carouselExampleIndicators" class="carousel slide mx-auto"  style="width: 60%;" data-bs-ride="carousel">
            
            <div class="carousel-inner" id="boderx">
                <ol class="carousel-indicators">
                    <li data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active"></li>
                    <li data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1"></li>
                    <li data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2"></li>
                </ol>
                <div class="carousel-item active">
                    <img class="d-block w-100 " id="boderx" src="~/img/Foot/11.jpg" alt="First slide">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Third slide kien</h5>
                        <p>Praesent commodo cursus magna, vel scelerisque nisl.</p>
                    </div>
                
                </div>
                <div class="carousel-item">
                    <img class="d-block w-100" id="boderx" src="~/img/Foot/3.webp" alt="Second slide">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Third slide kien</h5>
                        <p>Praesent commodo cursus magna, vel scelerisque nisl.</p>
                    </div>
                
                </div>
                <div class="carousel-item">
                    <img class="d-block w-100" id="boderx" src="~/img/Foot/9.jpg" alt="Third slide">
                    <div class="carousel-caption d-none d-md-block">
                    <h5>Third slide kien</h5>
                        <p>Praesent commodo cursus magna, vel scelerisque nisl.</p>
                    </div>
                </div>
                <a class="carousel-control-prev align-items-center" href="#carouselExampleIndicators" role="button" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </a>
                <a class="carousel-control-next align-items-center" href="#carouselExampleIndicators" role="button" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </a>
            </div>
        </div>
    </div>
</section>


        


<section class="space-sm flush-with-above page-section" id="product">
    <div class="container">
        <div class="row">
            <div class="col text-center">
                <div class="row justify-content-center">
                    <div class="col-lg-8 text-center">
                        <h2 class="text-black mt-0">We've got what you need!</h2>
                        <hr class="divider divider-light" />
                    </div>
                </div>
                <div class="mb-3">
                    <a type="button" class="btn btn-primary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="-1">All</a>
                    @foreach (var category in Html.GetEnumSelectList<ProductCategory>())
                    {
                        <a type="button" class="btn btn-primary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="@category.Value">@category.Text</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            @if (isValidPage)
            {
                <div class="d-flex justify-content-center align-items-center mt-4">

                    <a type="button" class="btn btn-sm btn-outline-primary @prevDisabled"
                    asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">
                        <i class="bi bi-arrow-left-short fs-5"></i>

                    </a>
                    <a type="button" class="btn btn-sm btn-outline-primary @nextDisabled"
                    asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">
                        <i class="bi bi-arrow-right-short fs-5"></i>
                    </a>
                </div>
                <div class="d-flex justify-content-center align-items-center mb-4">
                    <div class="text-muted text-small">Results @resultStart - @resultEnd of @Model.TotalProducts</div>
                </div>
            }
        </div>
        
        <ul class="row d-flex justify-content-center">
            @foreach (var product in Model.Products)
            {
                @* <a type="button" asp-controller="Product" asp-action="Detail" asp-route-id="@product.ProductID" > *@
                    <div class="card m-2 col-12 col-md-4 col-lg-3 mt-2" style="width: 18rem;">
                        <div class="card-body">

                             @if(product.Status == null || product.Status == ProductStatus.Unknown)
                                {
                                        <span class="badge badge-pill badge-light text-purple-800 bg-purple-200 mb-2">
                                            
                                        </span>
                                }
                                else
                                {
                                     <span class="badge badge-pill text-white mb-2"
                                        style="background-color: 
                                            @(product.Status switch
                                            {
                                                ProductStatus.Bestseller => "green",
                                                ProductStatus.NewArrival => "blue",
                                                ProductStatus.Featured => "purple",
                                                ProductStatus.OutOfStock => "gray",
                                                ProductStatus.Discounted => "red",
                                                ProductStatus.LimitedEdition => "gold",
                                                ProductStatus.ComingSoon => "orange",
                                                _ => "brown" // Mặc định
                                            });">
                                        @product.Status
                                    </span>
                                }
                         
                            <div>
                                <a class="fixed-card" type="button" asp-controller="Product" asp-action="Detail"  asp-route-id="@product.ProductID" fixed-card>
                                @if(@product.Image != null)
                                {
                                    <img class="card-img-top card-img-top mb-4 fixed-card-img" src="@product.Image" alt="Card image cap">   
                                }
                                else
                                {
                                    <img class="card-img-top card-img-top mb-4 fixed-card-img" src="/img/rungroopclub.png" alt="Card image cap">   
                                }
                                
                                </a>
                            </div>
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted">Shipped in 3-4 days</p>
                            <p class="card-text text-muted">Quantity:  @product.Quantity</p>
                            <p class="card-text font-weight-bold">$@product.Price</p>
                            <div class="d-flex">
                                @if(product.Quantity <= 0)
                                {
                                    <p>Sold out</p>
                                }
                                else
                                {
                                    <a type="button" asp-controller="Cart" asp-action="Create"
                                    asp-route-id="@product.ProductID">
                                    <button class="btn btn-light flex-fill mr-2"><i class="bi bi-bag-plus fs-5"></i>
                                        Add Cart</button>
                                    </a>
                                    <button class="btn btn-primary flex-fill" onclick="BuyItems(this)" data-id="@product.ProductID"><i class="bi bi-piggy-bank fs-5"></i>Buy</button>

                                }
                            </div>
                        </div>
                    </div>
                
                    @* <li class="col-12 col-md-4 col-lg-3 mt-2"  style="height: 500px;" >
                        <div class="card">
                            <a type="button" asp-controller="Product" asp-action="Detail"  asp-route-id="@product.ProductID"  style="height: 300px;">
                                @if(@product.Image != null)
                                {
                                    <img class="card-img-top" src="@product.Image" alt="Card image cap">   
                                }
                                else
                                {
                                    <img class="card-img-top" src="/img/rungroopclub.png" alt="Card image cap">   
                                }
                                
                            </a>
                            <div class="card-body">
                                <h4 class="card-title">@product.Name</h4>
                                <p class="card-text">@product.Description</p>
                                <p class="card-text">@product.Quantity, @product.Price</p>Price
                            </div>
                            <div class="card-footer card-footer-borderless d-flex justify-content-between">
                                <div>
                                    <small>@product.Category</small>
                                </div>
                                @if (isAuthenticated && User.IsInRole("admin"))
                                {
                                    <div>
                                        <a type="button" class="btn btn-sm btn-outline-info" asp-controller="Product" asp-action="Edit" asp-route-id="@product.ProductID">
                                            Edit
                                        </a>
                                        <a type="button" class="btn btn-sm btn-outline-danger" asp-controller="Product" asp-action="Delete" asp-route-id="@product.ProductID">
                                            Delete
                                        </a>
                                    </div>
                         d-fle       }
                            </div>
                        </div>
                    </li> *@
                @* </a> *@
            }
        </ul>
        <div class="container">
            <div class="row">
                @if (isValidPage)
                {
                    <div class="d-flex justify-content-center align-items-center mt-4">
                        <div class="text-muted text-small">Results @resultStart - @resultEnd of @Model.TotalProducts</div>
                    </div>
                    <div class="d-flex justify-content-center align-items-center mb-4">
                        <a type="button" class="btn btn-sm btn-outline-primary @prevDisabled"
                        asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">
                            <i class="bi bi-arrow-left-short fs-5"></i>

                        </a>
                        <a type="button" class="btn btn-sm btn-outline-primary @nextDisabled"
                        asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">
                            <i class="bi bi-arrow-right-short fs-5"></i>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

   
        <section class="page-section" id="services">
            <div class="container px-4 px-lg-5">
                <h2 class="text-center mt-0">At Your Service</h2>
                <hr class="divider" />
                <div class="row gx-4 gx-lg-5">
                    <div class="col-lg-3 col-md-6 text-center">
                        <div class="mt-5">
                            <div class="mb-2"><i class="bi-gem fs-1 text-primary"></i></div>
                            <h3 class="h4 mb-2">Sturdy Themes</h3>
                            <p class="text-muted mb-0">Our themes are updated regularly to keep them bug free!</p>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 text-center">
                        <div class="mt-5">
                            <div class="mb-2"><i class="bi-laptop fs-1 text-primary"></i></div>
                            <h3 class="h4 mb-2">Up to Date</h3>
                            <p class="text-muted mb-0">All dependencies are kept current to keep things fresh.</p>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 text-center">
                        <div class="mt-5">
                            <div class="mb-2"><i class="bi-globe fs-1 text-primary"></i></div>
                            <h3 class="h4 mb-2">Ready to Publish</h3>
                            <p class="text-muted mb-0">You can use this design as is, or you can make changes!</p>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 text-center">
                        <div class="mt-5">
                            <div class="mb-2"><i class="bi-heart fs-1 text-primary"></i></div>
                            <h3 class="h4 mb-2">Made with Love</h3>
                            <p class="text-muted mb-0">Is it really open source if it's not made with love?</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

<script>
    document.getElementById('productImage').addEventListener('change', function(event) {
        const file = event.target.files[0]; // Lấy file từ input
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                // Lấy phần tử chứa biểu tượng tải lên
                const uploadIcon = document.getElementById('uploadIcon');
                
                // Đặt ảnh làm background cho phần tử uploadIcon
                uploadIcon.style.backgroundImage = `url(${e.target.result})`; // Đặt ảnh làm background
                uploadIcon.style.backgroundSize = 'contain'; // Giữ tỷ lệ ảnh với chiều cao cố định
                uploadIcon.style.backgroundPosition = 'center'; // Căn giữa ảnh
                uploadIcon.style.backgroundRepeat = 'no-repeat'; // Không lặp lại ảnh

                // Ẩn biểu tượng tải lên (icon) sau khi upload
                const icon = uploadIcon.querySelector('i');
                icon.style.display = 'none'; // Ẩn biểu tượng tải lên
            };
            reader.readAsDataURL(file); // Đọc file ảnh
        }
    });
    
</script>
<script>
    function BuyItems(button) {
        let productId = button.getAttribute("data-id"); // Lấy ID sản phẩm

        Swal.fire({
            title: "Chọn phương thức thanh toán",
            text: "Vui lòng chọn phương thức thanh toán bạn muốn sử dụng.",
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "COD",
            cancelButtonText: "MoMo",
            showDenyButton: true,
            denyButtonText: "ZaloPay",
            html: `
                <button id="other-payment" class="swal2-confirm swal2-styled" style="margin-top: 10px;">
                    Ví điện tử khác
                </button>
            `,
            didOpen: () => {
                document.getElementById("other-payment").addEventListener("click", function () {
                    processOrder(productId, "Other");
                    Swal.close(); // Đóng hộp thoại sau khi chọn
                });
            }
        }).then((result) => {
            if (result.isConfirmed) {
                processOrder(productId, 2); // COD
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                processOrder(productId, 0); // MoMo
            } else if (result.isDenied) {
                processOrder(productId, 1); // ZaloPay
            }
        });
    }

    function processOrder(productId, paymentMethod) {
        console.log("Đặt hàng với ProductID:", productId, "Thanh toán bằng:", paymentMethod);

        // Gửi request đến server xử lý
        fetch('/Order/CreateOrder', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ productId, paymentMethod })
        })
        .then(response => response.json())
        .then(data => {
            if (data.payUrl) {
                window.location.href = data.payUrl;  // Redirect ở FE
            }
        });
    }

</script>