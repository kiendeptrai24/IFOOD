@using iFood.Data.Enum
@model Product

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');
    
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --accent-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --success-gradient: linear-gradient(135deg, #81FBB8 0%, #28C76F 100%);
        --warning-gradient: linear-gradient(135deg, #FFD93D 0%, #FF8008 100%);
        --danger-gradient: linear-gradient(135deg, #FF416C 0%, #FF4B2B 100%);
        --dark-gradient: linear-gradient(135deg, #2C3E50 0%, #34495E 100%);
        --glass-bg: rgba(255, 255, 255, 0.25);
        --glass-border: rgba(255, 255, 255, 0.18);
        --text-primary: #2c3e50;
        --text-secondary: #34495e;
        --text-muted: #95a5a6;
        --shadow-lg: 0 20px 40px rgba(0,0,0,0.15);
        --shadow-xl: 0 25px 50px rgba(0,0,0,0.25);
        --border-radius: 20px;
        --border-radius-sm: 12px;
        --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Poppins', sans-serif;
        overflow-x: hidden;
    }

    .product-container {
        background: var(--primary-gradient);
        min-height: 100vh;
        padding: 2rem 1rem;
        position: relative;
        overflow: hidden;
    }

    .product-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            radial-gradient(circle at 20% 80%, rgba(255,255,255,0.1) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(255,255,255,0.1) 0%, transparent 50%);
        z-index: 0;
    }

    .product-card {
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border: 1px solid var(--glass-border);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-xl);
        overflow: hidden;
        margin: 0 auto;
        max-width: 1400px;
        position: relative;
        z-index: 1;
        animation: fadeInUp 1s ease-out;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(50px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .product-image-section {
        padding: 3rem;
        background: linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%);
        position: relative;
    }

    .product-image-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            radial-gradient(circle at 30% 30%, rgba(102,126,234,0.1) 0%, transparent 50%),
            radial-gradient(circle at 70% 70%, rgba(118,75,162,0.1) 0%, transparent 50%);
        z-index: 0;
    }

    .main-image-container {
        position: relative;
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow-lg);
        margin-bottom: 2rem;
        background: white;
        padding: 2rem;
        z-index: 1;
        transform: perspective(1000px) rotateY(0deg);
        transition: var(--transition);
    }

    .main-image-container:hover {
        transform: perspective(1000px) rotateY(-5deg) rotateX(2deg);
        box-shadow: var(--shadow-xl);
    }

    .main-image {
        width: 100%;
        height: 450px;
        object-fit: cover;
        border-radius: var(--border-radius-sm);
        transition: var(--transition);
        filter: brightness(1) contrast(1.1) saturate(1.1);
    }

    .main-image:hover {
        transform: scale(1.08);
        filter: brightness(1.1) contrast(1.2) saturate(1.2);
    }

    .thumbnail-container {
        display: flex;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
        z-index: 1;
        position: relative;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        border-radius: var(--border-radius-sm);
        overflow: hidden;
        border: 3px solid transparent;
        transition: var(--transition);
        cursor: pointer;
        position: relative;
        background: white;
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
    }

    .thumbnail::before {
        content: '';
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        background: var(--accent-gradient);
        border-radius: var(--border-radius-sm);
        z-index: -1;
        opacity: 0;
        transition: var(--transition);
    }

    .thumbnail:hover,
    .thumbnail.active {
        transform: translateY(-8px) scale(1.1);
        box-shadow: 0 15px 35px rgba(0,0,0,0.2);
    }

    .thumbnail:hover::before,
    .thumbnail.active::before {
        opacity: 1;
    }

    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: calc(var(--border-radius-sm) - 3px);
        transition: var(--transition);
    }

    .product-info-section {
        padding: 3rem;
        background: rgba(255,255,255,0.95);
        backdrop-filter: blur(10px);
    }

    .product-title {
        font-size: 3rem;
        font-weight: 800;
        color: var(--text-primary);
        margin-bottom: 1rem;
        line-height: 1.2;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: slideInRight 0.8s ease-out 0.3s both;
    }

    @@keyframes slideInRight {
        from {
            opacity: 0;
            transform: translateX(50px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .rating-container {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: var(--glass-bg);
        backdrop-filter: blur(10px);
        border: 1px solid var(--glass-border);
        border-radius: var(--border-radius-sm);
        animation: slideInRight 0.8s ease-out 0.5s both;
    }

    .stars {
        font-size: 1.5rem;
        background: var(--warning-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        filter: drop-shadow(0 2px 4px rgba(255,193,7,0.3));
    }

    .rating-text {
        color: var(--text-secondary);
        font-weight: 600;
        font-size: 1.1rem;
    }

    .stock-badge {
        background: var(--success-gradient);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 25px;
        font-size: 0.9rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 4px 15px rgba(40,199,111,0.3);
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }

    .price-container {
        background: var(--secondary-gradient);
        color: white;
        padding: 2rem;
        border-radius: var(--border-radius);
        margin: 2rem 0;
        text-align: center;
        box-shadow: var(--shadow-lg);
        position: relative;
        overflow: hidden;
        animation: slideInLeft 0.8s ease-out 0.7s both;
    }

    @@keyframes slideInLeft {
        from {
            opacity: 0;
            transform: translateX(-50px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .price-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        animation: shine 3s infinite;
    }

    @@keyframes shine {
        0% { left: -100%; }
        100% { left: 100%; }
    }

    .price {
        font-size: 3.5rem;
        font-weight: 800;
        margin: 0;
        text-shadow: 0 2px 10px rgba(0,0,0,0.3);
    }

    .price-unit {
        font-size: 1.2rem;
        opacity: 0.9;
        font-weight: 500;
    }

    .description {
        color: var(--text-secondary);
        line-height: 1.8;
        margin-bottom: 2rem;
        font-size: 1.2rem;
        font-weight: 400;
        animation: fadeIn 0.8s ease-out 0.9s both;
    }

    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    .product-details {
        background: var(--glass-bg);
        backdrop-filter: blur(10px);
        border: 1px solid var(--glass-border);
        padding: 2rem;
        border-radius: var(--border-radius-sm);
        margin-bottom: 2.5rem;
        animation: slideInUp 0.8s ease-out 1.1s both;
    }

    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid rgba(52,73,94,0.1);
        transition: var(--transition);
    }

    .detail-row:hover {
        background: rgba(255,255,255,0.5);
        margin: 0 -2rem;
        padding: 1rem 2rem;
        border-radius: var(--border-radius-sm);
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 700;
        color: var(--text-primary);
        font-size: 1.1rem;
    }

    .detail-value {
        color: var(--text-secondary);
        font-weight: 500;
        font-size: 1.1rem;
    }

    .action-buttons {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        margin-top: 2.5rem;
        animation: slideInUp 0.8s ease-out 1.3s both;
    }

    .btn-modern {
        padding: 1.5rem 2rem;
        border: none;
        border-radius: var(--border-radius-sm);
        font-size: 1.2rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
        text-decoration: none;
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow-lg);
    }

    .btn-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: var(--transition);
    }

    .btn-modern:hover::before {
        left: 100%;
    }

    .btn-add-cart {
        background: var(--glass-bg);
        backdrop-filter: blur(10px);
        color: var(--text-primary);
        border: 2px solid var(--accent-gradient);
        background-clip: padding-box;
    }

    .btn-add-cart:hover {
        background: var(--accent-gradient);
        color: white;
        transform: translateY(-8px) scale(1.05);
        box-shadow: 0 20px 40px rgba(79,172,254,0.3);
    }

    .btn-buy {
        background: var(--secondary-gradient);
        color: white;
        border: none;
    }

    .btn-buy:hover {
        transform: translateY(-8px) scale(1.05);
        box-shadow: 0 20px 40px rgba(245,87,108,0.4);
        filter: brightness(1.1);
    }

    .status-message {
        text-align: center;
        padding: 2rem;
        border-radius: var(--border-radius-sm);
        font-weight: 700;
        font-size: 1.3rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        animation: bounce 0.8s ease-out 1.3s both;
    }

    @@keyframes bounce {
        0%, 60%, 100% { transform: translateY(0); }
        30% { transform: translateY(-10px); }
    }

    .sold-out {
        background: var(--danger-gradient);
        color: white;
        box-shadow: 0 10px 30px rgba(255,65,108,0.3);
    }

    .coming-soon {
        background: var(--warning-gradient);
        color: white;
        box-shadow: 0 10px 30px rgba(255,128,8,0.3);
    }

    .floating-elements {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 0;
    }

    .floating-elements::before,
    .floating-elements::after {
        content: '';
        position: absolute;
        border-radius: 50%;
        background: rgba(255,255,255,0.1);
        animation: float 6s ease-in-out infinite;
    }

    .floating-elements::before {
        width: 200px;
        height: 200px;
        top: 20%;
        right: 10%;
        animation-delay: 0s;
    }

    .floating-elements::after {
        width: 150px;
        height: 150px;
        bottom: 30%;
        left: 15%;
        animation-delay: 3s;
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0) rotate(0deg); }
        50% { transform: translateY(-30px) rotate(180deg); }
    }

    .notification {
        position: fixed;
        top: 2rem;
        right: 2rem;
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        color: var(--text-primary);
        padding: 1.5rem 2rem;
        border-radius: var(--border-radius-sm);
        font-size: 1.1rem;
        font-weight: 600;
        display: none;
        z-index: 10000;
        box-shadow: var(--shadow-xl);
        border: 1px solid var(--glass-border);
        transform: translateX(400px);
        transition: var(--transition);
    }

    .notification.show {
        transform: translateX(0);
    }

    .notification.success {
        background: var(--success-gradient);
        color: white;
    }

    .notification.error {
        background: var(--danger-gradient);
        color: white;
    }

    .notification.info {
        background: var(--accent-gradient);
        color: white;
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-track {
        background: rgba(255,255,255,0.1);
    }

    ::-webkit-scrollbar-thumb {
        background: var(--secondary-gradient);
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: var(--primary-gradient);
    }

    @@media (max-width: 768px) {
        .product-container {
            padding: 1rem 0.5rem;
        }
        
        .product-card {
            margin: 0.5rem;
        }
        
        .product-image-section,
        .product-info-section {
            padding: 2rem 1.5rem;
        }
        
        .product-title {
            font-size: 2rem;
        }
        
        .price {
            font-size: 2.5rem;
        }
        
        .action-buttons {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .main-image {
            height: 300px;
        }
        
        .thumbnail {
            width: 60px;
            height: 60px;
        }
        
        .btn-modern {
            padding: 1.2rem 1.5rem;
            font-size: 1rem;
        }
    }

    /* Enhanced ripple effect */
    .ripple-effect {
        position: relative;
        overflow: hidden;
    }

    .ripple-effect::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.5);
        transform: translate(-50%, -50%);
        transition: width 0.6s ease, height 0.6s ease;
    }

    .ripple-effect:active::after {
        width: 300px;
        height: 300px;
    }
</style>

<div id="notification" class="notification"></div>

<div class="product-container">
    <div class="floating-elements"></div>
    
    <div>
        <div class="row no-gutters">
            <div class="col-lg-6 product-image-section">
                <div class="main-image-container">
                    <img src="@Model.Image" class="main-image" alt="@Model.Name" id="mainImage">
                </div>
                <div class="thumbnail-container">
                    <div class="thumbnail active">
                        <img src="@Model.Image" alt="@Model.Name">
                    </div>
                    <div class="thumbnail">
                        <img src="@Model.Image" alt="@Model.Name">
                    </div>
                    <div class="thumbnail">
                        <img src="@Model.Image" alt="@Model.Name">
                    </div>
                    <div class="thumbnail">
                        <img src="@Model.Image" alt="@Model.Name">
                    </div>
                    <div class="thumbnail">
                        <img src="@Model.Image" alt="@Model.Name">
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 product-info-section">
                <h1 class="product-title">@Model.Name</h1>
                
                <div class="rating-container">
                    <div id="ratingStars" class="stars">
                        <!-- Stars will be dynamically generated here -->
                    </div>
                    <span class="rating-text" id="ratingValue">4.5</span>
                    <span class="rating-text">•</span>
                    <span class="rating-text">154 orders</span>
                    <span class="stock-badge">
                        <i class="bi bi-check-circle-fill"></i> In Stock
                    </span>
                </div>
                
                <div class="price-container">
                    <p class="price">$@Model.Price</p>
                    <span class="price-unit">per box</span>
                </div>
                
                <p class="description">@Model.Description</p>
                
                <div class="product-details">
                    <div class="detail-row">
                        <span class="detail-label">
                            <i class="bi bi-tag-fill"></i> Category:
                        </span>
                        <span class="detail-value">@Model.Category</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">
                            <i class="bi bi-calendar-check"></i> Release Date:
                        </span>
                        <span class="detail-value">@Model.DateSell.ToString("MMM dd, yyyy")</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">
                            <i class="bi bi-box-seam"></i> Available Quantity:
                        </span>
                        <span class="detail-value">@Model.Quantity.ToString()</span>
                    </div>
                </div>

                <div class="action-section">
                    @if(Model.Quantity <= 0)
                    {
                        <div class="status-message sold-out">
                            <i class="bi bi-exclamation-triangle-fill"></i> Sold Out
                        </div>
                    }
                    else if(Model.Status == ProductStatus.ComingSoon)
                    {
                        <div class="status-message coming-soon">
                            <i class="bi bi-clock-fill"></i> Coming Soon
                        </div>
                    }
                    else
                    {
                        <div class="action-buttons">
                            <a asp-controller="Cart" asp-action="Create" asp-route-id="@Model.ProductID" class="btn-modern btn-add-cart ripple-effect">
                                <i class="bi bi-bag-plus-fill"></i> Add to Cart
                            </a>
                            <button class="btn-modern btn-buy ripple-effect" onclick="BuyItems(this)" data-id="@Model.ProductID">
                                <i class="bi bi-lightning-charge-fill"></i> Buy Now
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Enhanced star rating with better animation
    function generateStars(rating) {
        const fullStar = '<i class="bi bi-star-fill"></i>';
        const halfStar = '<i class="bi bi-star-half"></i>';
        const emptyStar = '<i class="bi bi-star"></i>';

        let starsHTML = '';
        const roundedRating = Math.floor(rating);
        const hasHalfStar = rating % 1 >= 0.5;

        for (let i = 0; i < roundedRating; i++) {
            starsHTML += fullStar;
        }
        
        if (hasHalfStar && roundedRating < 5) {
            starsHTML += halfStar;
        }
        
        const totalStars = roundedRating + (hasHalfStar ? 1 : 0);
        for (let i = totalStars; i < 5; i++) {
            starsHTML += emptyStar;
        }

        const starsElement = document.getElementById("ratingStars");
        starsElement.innerHTML = starsHTML;
        
        // Animate stars one by one
        const starElements = starsElement.querySelectorAll('i');
        starElements.forEach((star, index) => {
            star.style.opacity = '0';
            star.style.transform = 'scale(0)';
            setTimeout(() => {
                star.style.transition = 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)';
                star.style.opacity = '1';
                star.style.transform = 'scale(1)';
            }, index * 100);
        });
        
        document.getElementById("ratingValue").innerText = rating;
    }

    // Enhanced thumbnail functionality with 3D effect
    function initializeThumbnails() {
        const thumbnails = document.querySelectorAll('.thumbnail');
        const mainImage = document.getElementById('mainImage');
        const mainContainer = document.querySelector('.main-image-container');
        
        thumbnails.forEach((thumb, index) => {
            thumb.addEventListener('click', function() {
                thumbnails.forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                // Add loading effect
                mainImage.style.opacity = '0';
                mainImage.style.transform = 'scale(0.8)';
                
                setTimeout(() => {
                    const imgSrc = this.querySelector('img').src;
                    mainImage.src = imgSrc;
                    mainImage.style.opacity = '1';
                    mainImage.style.transform = 'scale(1)';
                }, 200);
            });
            
            // Add entrance animation
            thumb.style.opacity = '0';
            thumb.style.transform = 'translateY(30px)';
            setTimeout(() => {
                thumb.style.transition = 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)';
                thumb.style.opacity = '1';
                thumb.style.transform = 'translateY(0)';
            }, index * 100 + 1500);
        });
    }

    // Ultra-modern buy function with advanced UX
    function BuyItems(button) {
        const productId = button.getAttribute("data-id");
        
        // Enhanced loading state
        const originalContent = button.innerHTML;
        button.innerHTML = '<i class="bi bi-arrow-repeat"></i> Processing...';
        button.disabled = true;
        button.style.transform = 'scale(0.95)';

        Swal.fire({
            title: '<i class="bi bi-credit-card-fill"></i> Choose Payment Method',
            html: `
                <p style="margin-bottom: 2rem; color: #666; font-size: 1.1rem;">
                    Select your preferred payment option to complete your purchase
                </p>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem; margin: 2rem 0;">
                    <button id="cod-btn" class="payment-btn" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; border: none; padding: 1rem; border-radius: 12px; font-weight: 600; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(79,172,254,0.3);">
                        <i class="bi bi-truck" style="font-size: 1.5rem; display: block; margin-bottom: 0.5rem;"></i>
                        Cash on Delivery
                    </button>
                    <button id="momo-btn" class="payment-btn" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; border: none; padding: 1rem; border-radius: 12px; font-weight: 600; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(245,87,108,0.3);">
                        <i class="bi bi-phone" style="font-size: 1.5rem; display: block; margin-bottom: 0.5rem;"></i>
                        MoMo
                    </button>
                    <button id="zalo-btn" class="payment-btn" style="background: linear-gradient(135deg, #81FBB8 0%, #28C76F 100%); color: white; border: none; padding: 1rem; border-radius: 12px; font-weight: 600; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(40,199,111,0.3);">
                        <i class="bi bi-wallet2" style="font-size: 1.5rem; display: block; margin-bottom: 0.5rem;"></i>
                        ZaloPay
                    </button>
                    <button id="other-btn" class="payment-btn" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none; padding: 1rem; border-radius: 12px; font-weight: 600; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(102,126,234,0.3);">
                        <i class="bi bi-credit-card-fill" style="font-size: 1.5rem; display: block; margin-bottom: 0.5rem;"></i>
                        Other E-wallets
                    </button>
                </div>
            `,
            showConfirmButton: false,
            showCancelButton: true,
            cancelButtonText: '<i class="bi bi-x-circle"></i> Cancel',
            customClass: {
                popup: 'modern-swal-popup',
                cancelButton: 'modern-swal-cancel'
            },
            width: '600px',
            backdrop: `
                rgba(0,0,0,0.8)
                left top
                no-repeat
            `,
            didOpen: () => {
                // Reset button state when dialog opens
                button.innerHTML = originalContent;
                button.disabled = false;
                button.style.transform = 'scale(1)';
                
                // Add hover effects to payment buttons
                const paymentBtns = document.querySelectorAll('.payment-btn');
                paymentBtns.forEach(btn => {
                    btn.addEventListener('mouseenter', function() {
                        this.style.transform = 'translateY(-5px) scale(1.05)';
                        this.style.boxShadow = '0 8px 25px rgba(0,0,0,0.3)';
                    });
                    btn.addEventListener('mouseleave', function() {
                        this.style.transform = 'translateY(0) scale(1)';
                        this.style.boxShadow = this.style.boxShadow.replace('0.3)', '0.3)');
                    });
                });
                
                // Payment method event listeners
                document.getElementById("cod-btn").addEventListener("click", function () {
                    processOrder(productId, 2); // COD
                    Swal.close();
                });
                
                document.getElementById("momo-btn").addEventListener("click", function () {
                    processOrder(productId, 0); // MoMo
                    Swal.close();
                });
                
                document.getElementById("zalo-btn").addEventListener("click", function () {
                    processOrder(productId, 1); // ZaloPay
                    Swal.close();
                });
                
                document.getElementById("other-btn").addEventListener("click", function () {
                    processOrder(productId, "Other");
                    Swal.close();
                });
            },
            didClose: () => {
                // Reset button if dialog was cancelled
                button.innerHTML = originalContent;
                button.disabled = false;
                button.style.transform = 'scale(1)';
            }
        });
    }

    // Enhanced order processing with better feedback
    function processOrder(productId, paymentMethod) {
        console.log("Placing order with ProductID:", productId, "Payment method:", paymentMethod);
        
        showNotification("🚀 Processing your order...", "info");

        fetch('/Order/CreateOrder', {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "X-Requested-With": "XMLHttpRequest"
            },
            body: JSON.stringify({ productId, paymentMethod })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                if (data.payUrl) {
                    showNotification("💳 Redirecting to payment gateway...", "success");
                    setTimeout(() => {
                        window.location.href = data.payUrl;
                    }, 2000);
                } else {
                    showNotification("🎉 Order placed successfully!", "success");
                    // Add confetti effect
                    createConfetti();
                }
            } else {
                showNotification(`❌ ${data.message || "Order failed. Please try again."}`, "error");
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification("⚠️ Something went wrong. Please try again.", "error");
        });
    }

    // Enhanced notification system with better animations
    function showNotification(message, type = "info") {
        const notification = document.getElementById('notification');
        notification.innerHTML = message;
        notification.className = `notification ${type} show`;
        notification.style.display = 'block';
        
        // Auto hide after 4 seconds
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                notification.style.display = 'none';
            }, 400);
        }, 4000);
    }

    // Confetti effect for successful orders
    function createConfetti() {
        const confettiCount = 100;
        const confettiContainer = document.body;
        
        for (let i = 0; i < confettiCount; i++) {
            const confetti = document.createElement('div');
            confetti.style.position = 'fixed';
            confetti.style.left = Math.random() * 100 + 'vw';
            confetti.style.top = '-10px';
            confetti.style.width = '10px';
            confetti.style.height = '10px';
            confetti.style.background = `hsl(${Math.random() * 360}, 100%, 50%)`;
            confetti.style.borderRadius = '50%';
            confetti.style.pointerEvents = 'none';
            confetti.style.zIndex = '10001';
            confetti.style.animation = `confetti-fall 3s ease-out forwards`;
            
            confettiContainer.appendChild(confetti);
            
            setTimeout(() => {
                confetti.remove();
            }, 3000);
        }
    }

    // Add confetti animation keyframes
    const confettiStyle = document.createElement('style');
    confettiStyle.textContent = `
        @@keyframes confetti-fall {
            0% {
                transform: translateY(-100vh) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(100vh) rotate(720deg);
                opacity: 0;
            }
        }
        
        .modern-swal-popup {
            border-radius: 20px !important;
            backdrop-filter: blur(20px) !important;
            background: rgba(255, 255, 255, 0.95) !important;
            box-shadow: 0 25px 50px rgba(0,0,0,0.25) !important;
        }
        
        .modern-swal-cancel {
            background: linear-gradient(135deg, #FF416C 0%, #FF4B2B 100%) !important;
            border: none !important;
            border-radius: 12px !important;
            font-weight: 600 !important;
            padding: 0.8rem 1.5rem !important;
            transition: all 0.3s ease !important;
        }
        
        .modern-swal-cancel:hover {
            transform: translateY(-2px) !important;
            box-shadow: 0 8px 25px rgba(255,65,108,0.4) !important;
        }
    `;
    document.head.appendChild(confettiStyle);

    // Parallax effect for floating elements
    function initParallaxEffect() {
        const floatingElements = document.querySelector('.floating-elements');
        if (!floatingElements) return;
        
        window.addEventListener('mousemove', (e) => {
            const x = (e.clientX / window.innerWidth) * 100;
            const y = (e.clientY / window.innerHeight) * 100;
            
            floatingElements.style.transform = `translate(${x * 0.05}px, ${y * 0.05}px)`;
        });
    }

    // Intersection Observer for scroll animations
    function initScrollAnimations() {
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);
        
        // Observe all animated elements
        const animatedElements = document.querySelectorAll('.product-details, .action-buttons, .description');
        animatedElements.forEach(el => observer.observe(el));
    }

    // Initialize everything when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize core functionality
        generateStars(4.5);
        initializeThumbnails();
        initParallaxEffect();
        initScrollAnimations();
        
        // Add entrance animations
        const productCard = document.querySelector('.product-card');
        productCard.style.opacity = '0';
        productCard.style.transform = 'translateY(50px) scale(0.9)';
        
        setTimeout(() => {
            productCard.style.transition = 'all 1s cubic-bezier(0.175, 0.885, 0.32, 1.275)';
            productCard.style.opacity = '1';
            productCard.style.transform = 'translateY(0) scale(1)';
        }, 200);
        
        // Optimize for mobile
        if (window.innerWidth <= 768) {
            document.body.style.overflowX = 'hidden';
            
            // Reduce animation intensity on mobile
            const floatingElements = document.querySelector('.floating-elements');
            if (floatingElements) {
                floatingElements.style.display = 'none';
            }
        }
        
        // Add smooth page transitions
        window.addEventListener('beforeunload', () => {
            document.body.style.opacity = '0';
            document.body.style.transform = 'scale(0.98)';
        });
    });

    // Performance optimization
    let ticking = false;
    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(updateAnimations);
            ticking = true;
        }
    }
    
    function updateAnimations() {
        // Batch DOM updates here
        ticking = false;
    }
    
    // Throttle scroll events
    window.addEventListener('scroll', requestTick, { passive: true });
    
    // Preload images for better performance
    function preloadImages() {
        const images = document.querySelectorAll('img');
        images.forEach(img => {
            const imageUrl = img.src;
            const preloadImg = new Image();
            preloadImg.src = imageUrl;
        });
    }
    
    preloadImages();
</script>

<!-- External Dependencies -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>