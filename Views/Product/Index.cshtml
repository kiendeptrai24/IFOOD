@using iFood.Data.Enum
@using iFood.Extensions
@using iFood.ViewModels
@model IndexProductViewModel

@{
    bool isAuthenticated = User.Identity?.IsAuthenticated == true;

    int resultStart = ((Model.Page - 1) * Model.PageSize) + 1;
    int resultEnd = Math.Min(resultStart + Model.PageSize - 1, Model.TotalProducts);

    bool isValidPage = resultStart <= Model.TotalProducts;

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<style>
    #formContainer {
        background-color: rgba(2, 28, 46, 0.395);
        padding: 20px;
        border-radius: 10px;
    }
    #boderx {
        border-radius: 15px;
    }
    .portfolio-container {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 15px;
        justify-content: center;
        max-width: 800px;
        margin: auto;
    }
    .portfolio-box img {
        width: 100%; 
        height: 300px; 
        object-fit: cover;
    }
    .no-bullets {
        list-style-type: none;
        padding-left: 0;
    }
    .fixed-card {
        height: 170px;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
    }
    .fixed-card-img {
        object-fit: scale-down;
        height: 100%;
        width: 100%;
        display: block;
    }
    .card {
        transition: transform 0.3s ease-in-out;
        position: relative;
    }
    .card:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    .card-body {
        transition: opacity 0.3s ease-in-out;
    }
    .card:hover .card-body {
        opacity: 1;
    }
    .btn:hover {
        opacity: 0.8;
    }
</style>

<section class="space-sm flush-with-above page-section" id="product">
    <div class="container">
        <div class="row">
            <div class="col text-center">
                <div class="row justify-content-center">
                    <div class="col-lg-8 text-center">
                        <h2 class="text-black mt-0">We've got what you need!</h2>
                        <hr class="divider divider-light" />
                    </div>
                </div>
                <div class="mb-3">
                    <a type="button" class="btn btn-primary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="-1">All</a>
                    @foreach (var category in Html.GetEnumSelectList<ProductCategory>())
                    {
                        <a type="button" class="btn btn-primary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="@category.Value">@category.Text</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            @if (isValidPage)
            {
                <div class="d-flex justify-content-center align-items-center mt-4">
                    <a type="button" class="btn btn-sm btn-outline-primary @prevDisabled"
                    asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">
                        <i class="bi bi-arrow-left-short fs-5"></i>
                    </a>
                    <a type="button" class="btn btn-sm btn-outline-primary @nextDisabled"
                    asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">
                        <i class="bi bi-arrow-right-short fs-5"></i>
                    </a>
                </div>
                <div class="d-flex justify-content-center align-items-center mb-4">
                    <div class="text-muted text-small">Results @resultStart - @resultEnd of @Model.TotalProducts</div>
                </div>
            }
        </div>
        
        <ul class="row d-flex justify-content-center">
            @foreach (var product in Model.Products)
            {
                @await Html.PartialAsync("_ProductCard", product)
            }
        </ul>
    </div>
</section>
